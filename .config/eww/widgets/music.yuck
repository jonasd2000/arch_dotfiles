(defvar music_active_regex "Playing|Paused")
(defvar music_players "spotify,spotifyd,spotify_player")

(deflisten music_artist "scripts/music_info --artist")
(deflisten music_title "scripts/music_info --title")
(deflisten music_album "scripts/music_info --album")
(deflisten music_ctime "scripts/music_info --ctime")
(deflisten music_ttime "scripts/music_info --ttime")
(deflisten music_ctime_raw "scripts/music_info --ctime_raw")
(deflisten music_ttime_raw "scripts/music_info --ttime_raw")
(deflisten music_coverpath "scripts/music_info --cover")
(deflisten music_status "scripts/music_info --status")


(defwidget music-info [?halign ?separator ?spacing ?auto-hide ?limit-width]
    (box
        :class "music-text music-info ${music_status == 'Playing' ? 'music-playing' : ''}"
        :halign {halign ?: "fill"}
        :valign "center"
        :space-evenly false
        :spacing {spacing ?: 2}
        :visible {(auto-hide ?: true) ? matches(music_status, music_active_regex) : true}
        (label
            :text "${music_title}"
            :limit-width {limit-width ?: 200}
        )
        (label
            :class "music-info-separator"
            :text {separator ?: "-"}
        )
        (label
            :text "${music_artist}"
            :limit-width {limit-width ?: 200}
        )
    )
)

(defwidget music-controls [?space-evenly ?halign ?width ?height ?class]
    (box
        :class "music-controls ${class}"
        :orientation "h"
        :space-evenly {space-evenly ?: true}
        :halign {halign ?: "fill"}
        (button
            :class "skip skip-prev"
            :width width
            :height height
            :onclick "playerctl -p ${music_players} previous"
            (image :icon "media-skip-backward-symbolic")
        )
        (button
            :class "round playpause"
            :halign "center"
            :width width
            :height height
            :onclick "playerctl -p ${music_players} play-pause"
            (image 
                :icon {music_status == "Paused" ? 
                 "media-playback-start-symbolic" :
                 "media-playback-pause-symbolic"}
            )
        )
        (button
            :class "skip skip-next"
            :width width
            :height height
            :onclick "playerctl -p ${music_players} next"
            (image :icon "media-skip-forward-symbolic")
        )
    )
)

(defvar music-progress-locked true)
(defwidget music []
    (box
        :class "music"
        :visible {matches(music_status, music_active_regex)}
        (overlay
            (box
                :class "m_album_cover"
                :style "background-image: url('${music_coverpath}');"
            )
            (eventbox ;; locks the music progress scale widget
                      ;; which sometimes sets the song progress to 0 when loading
                :onhover "eww update music-progress-locked=false"
                :onhoverlost "eww update music-progress-locked=true"
            (box
                :orientation "v"
                :space-evenly false
                :class "m_music_else"
                :valign "end"
                (box
                    :orientation "h"
                    :space-evenly false
                    (box 
                        :orientation "v"
                        :hexpand true
                        (music-info)
                        (label
                            :class "music-text"
                            :text music_album
                            :halign "start"
                        )
                    )
                    (label 
                        :class "music-text"
                        :text "${music_ctime} / ${music_ttime}"
                        :halign "end"
                        :valign "end"
                    )
                )
                (scale
                    :class "music-progress"
                    :value {music_ctime_raw}
                    :max {music_ttime_raw}
                    :onchange "scripts/set_player_position {} ${music_players} ${music-progress-locked}"
                )
                (music-controls)
            )
            )
        )
    )
)
